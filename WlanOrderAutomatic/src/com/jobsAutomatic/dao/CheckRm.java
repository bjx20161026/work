package com.jobsAutomatic.dao;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.datasource.DriverManagerDataSource;

public class CheckRm {
	@SuppressWarnings("deprecation")
	public int CheckAp(String nasid) {
		String sql = "select min(result) from ( SELECT CASE WHEN SYS_NAME_RESULT = 1 AND VENDOR_RESULT = 1 AND MODEL_RESULT = 1 AND IP_ADDR_RESULT = 1 THEN 2 WHEN IP_ADDR_RESULT = 0 OR IP_ADDR_RESULT = 2 THEN 0 ELSE 1 END AS RESULT FROM (SELECT CASE WHEN T2.SYS_NAME IS NULL THEN 0 WHEN T1.SYS_NAME = T2.SYS_NAME THEN 1 ELSE 2 END AS SYS_NAME_RESULT, CASE WHEN T2.VENDOR IS NULL THEN 0 WHEN T1.VENDOR = T2.VENDOR THEN 1 ELSE 2 END AS VENDOR_RESULT, CASE WHEN T2.SYS_MODEL IS NULL THEN 0 WHEN T1.MODEL = T2.SYS_MODEL THEN 1 ELSE 2 END AS MODEL_RESULT, CASE WHEN T2.IP_ADDR IS NULL THEN 0 WHEN T1.IP_ADDR = T2.IP_ADDR THEN 1 ELSE 2 END AS IP_ADDR_RESULT FROM (SELECT T1.DEVICE_ID, T1.MAC_ADDR, T1.SYS_NAME, T1.VENDOR, T1.MODEL, T1.IP_ADDR FROM PRM_DEVICE@RES T1, PRM_DEVICE_AP@RES T2 WHERE T1.DEVICE_ID = T2.DEVICE_ID AND T2.HOTSPOT_ID = (SELECT HOTSPOT_ID FROM PRM_WLAN_HOTSPOT@RES WHERE NAS_ID = ?)) T1 LEFT JOIN (SELECT T1.MAC_ADDR, T1.SYS_NAME, T2.VENDOR, T1.DEVICE_MODEL AS SYS_MODEL, T1.IP_ADDR from RM_DEVICE T1, RM_DEVICE_TEMPLATE T2, RM_AP_CONFIG T3 WHERE T1.DEVICE_ID = T3.DEVICE_ID AND T1.SYS_OID = T2.SYS_OID AND T3.HOTSPOT_ID = (SELECT HOTSPOT_ID FROM RM_WLAN_HOTSPOT WHERE NAS_ID = ?)) T2 ON T1.MAC_ADDR = T2.MAC_ADDR) T1 )";
		JdbcTemplate jdbcTemplate = getJdbcTemplate();
		return jdbcTemplate.queryForInt(sql, nasid,nasid);
	}
	
	@SuppressWarnings("deprecation")
	public int CheckSwitch(String nasid) {
		String sql = "select min(result) from  ( SELECT CASE WHEN SYS_NAME_RESULT = 1 AND VENDOR_RESULT = 1 AND MODEL_RESULT = 1 AND IP_ADDR_RESULT = 1 THEN 2 WHEN IP_ADDR_RESULT = 0 OR IP_ADDR_RESULT = 2 THEN 0 ELSE 1 END AS RESULT FROM (SELECT CASE WHEN T2.SYS_NAME IS NULL THEN 0 WHEN T1.SYS_NAME = T2.SYS_NAME THEN 1 ELSE 2 END AS SYS_NAME_RESULT, CASE WHEN T2.VENDOR IS NULL THEN 0 WHEN T1.VENDOR = T2.VENDOR THEN 1 ELSE 2 END AS VENDOR_RESULT, CASE WHEN T2.SYS_MODEL IS NULL THEN 0 WHEN T1.MODEL = T2.SYS_MODEL THEN 1 ELSE 2 END AS MODEL_RESULT, CASE WHEN T2.IP_ADDR IS NULL THEN 0 WHEN T1.IP_ADDR = T2.IP_ADDR THEN 1 ELSE 2 END AS IP_ADDR_RESULT FROM (SELECT T1.DEVICE_ID, T1.SYS_NAME, T1.VENDOR, T1.MODEL, T1.IP_ADDR FROM PRM_DEVICE@RES T1, PRM_DEVICE_SWITCH@RES T2 WHERE T1.DEVICE_ID = T2.DEVICE_ID AND T2.HOTSPOT_ID = (SELECT HOTSPOT_ID FROM PRM_WLAN_HOTSPOT@RES WHERE NAS_ID = ?)) T1 LEFT JOIN (SELECT T1.SYS_NAME, T2.VENDOR, T2.SYS_MODEL, T1.IP_ADDR from RM_DEVICE T1, RM_DEVICE_TEMPLATE T2, RM_SWITCH_EXT_INFO T3 WHERE T1.DEVICE_ID = T3.DEVICE_ID AND T1.SYS_OID = T2.SYS_OID AND T2.DEVICE_TYPE = 'SWITCH' AND T3.HOTSPOT_ID = (SELECT HOTSPOT_ID FROM RM_WLAN_HOTSPOT WHERE NAS_ID = ?)) T2 ON T1.IP_ADDR = T2.IP_ADDR) T1 )";
		JdbcTemplate jdbcTemplate = getJdbcTemplate();
		return jdbcTemplate.queryForInt(sql, nasid,nasid);
	}

	public JdbcTemplate getJdbcTemplate() {
		DriverManagerDataSource dataSource = new DriverManagerDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@10.221.18.36:1521:ipnet");
		dataSource.setUsername("rm");
		dataSource.setPassword("SHrm!23$");
		JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);
		return jdbcTemplate;
	}
}
